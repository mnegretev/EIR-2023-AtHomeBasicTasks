<launch>
  <param name="/path_planning/inflation_radius" value="0.3"/>
  <param name="/path_planning/cost_radius" value="0.3"/>
  <include file="$(find bring_up)/launch/justina_hardware.launch">
    <arg name="initial_x" value="7.64"/>
    <arg name="initial_y" value="5.40"/>
    <arg name="initial_a" value="1.57"/>
  </include>
  
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find config_files)/rviz/final_project.rviz"/>
  
  <node name="justina_gui" pkg="justina_gui" type="justina_gui_node" output="screen">
    <param name="la_predefined" value="$(find config_files)/manipulation/la_predefined.yaml"/>
    <param name="ra_predefined" value="$(find config_files)/manipulation/ra_predefined.yaml"/>
    <param name="hd_predefined" value="$(find config_files)/manipulation/hd_predefined.yaml"/>
  </node>

  <include file="$(find bring_up)/launch/justina_controllers.launch"/>

  <node name="map_server" pkg="map_server" type="map_server" output="screen" args="$(find config_files)/maps/appartment.yaml"/>
  <node name="amcl" pkg="amcl" type="amcl" output="screen" args="scan:=/hardware/scan">
    <param name="initial_pose_x" value="3.25"/>
    <param name="initial_pose_y" value="5.90"/>
    <param name="initial_pose_a" value="-1.57"/>
  </node>
  <node name="speech_recog" pkg="sprec_pocketsphinx" type="asr.py" output="screen">
    <param name="gram" value="$(find sprec_pocketsphinx)/vocab/final_project.gram"/>
    <param name="dict" value="$(find sprec_pocketsphinx)/vocab/voice_cmd.dic"/>
    <param name="grammar" value="final_project_gram"/>
    <param name="rule" value="simple_command"/>
    <param name="lm" value=":default"/>
  </node>
  <node name="audio_sender" pkg="sprec_pocketsphinx" type="send_audio.py" output="screen"/>
  <node name="sound_play" pkg="sound_play" type="soundplay_node.py" output="screen"/>

  <node name="map_inflation"  pkg="exercises" type="map_inflation.py"  output="screen"/>
  <node name="map_cost"       pkg="exercises" type="map_cost.py" output="screen"/>
  <node name="a_star"         pkg="exercises" type="a_star.py" output="screen"/>
  <node name="control"        pkg="exercises" type="control.py"  output="screen"/>
  <node name="color_segment"  pkg="exercises" type="color_segmentation.py"  output="screen"/>
  <node name="inverse_kinem"  pkg="exercises" type="inverse_kinematics.py"  output="screen"/>
</launch>
